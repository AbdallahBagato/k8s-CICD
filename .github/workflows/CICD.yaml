name: CICD Pipeline to deploy the Application
run-name: Deploy Application to AWS by ${{ github.actor }} on ${{ github.run_id }}
on:
  pull_request:
    branches:
      - main
jobs:
  CI_Job_weather:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' 
        
      - name: Install Linter 
        run: | 
          pip install flake8 
          flake8 
        working-directory: weather

      - name: Testing the Code
        env:
          APIKEY: ${{ secrets.APIKEY }}
        run: |
          pip install -r requirements.txt
          pip install pytest
          pytest 
        working-directory: weather

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: weather
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/weather:${{ github.run_id}}
        

  CI_JOB_Auth:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.21.1' # The Go version to download (if necessary) and use.

      - name: Cache golangci-lint
        id: cache-golangci-lint
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/golangci-lint
            ~/go/bin/golangci-lint
          key: golangci-lint-v1.55.2

      - name: Install golangci-lint
        if: steps.cache-golangci-lint.outputs.cache-hit != 'true'
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2        

      - name: Linting the code
        run: |
          export PATH=$PATH:$HOME/go/bin
          golangci-lint run
        working-directory: auth

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          severity: HIGH,CRITICAL
          scan-ref: './auth'
          ignore-unfixed: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/auth:${{ github.run_id}}
          context: auth

  
  CI_JOB_UI:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          severity: HIGH,CRITICAL
          scan-ref: './UI'
          ignore-unfixed: true
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/ui:${{ github.run_id}}
          context: UI
        
      
  Deploy_Job:
    runs-on: ubuntu-latest
    needs: [CI_Job_weather, CI_JOB_Auth, CI_JOB_UI]
    steps:
      - name: checkout code 
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: change in eks files
        run: |
          ls -l ./kubernates
          sed -i "s|bagato220/weather:.*|bagato220/weather:${{ github.run_id }}|" ./kubernates/weathersvc/Deployment.yaml
          sed -i "s|bagato220/auth:.*|bagato220/auth:${{ github.run_id }}|" ./kubernates/AUTH/Deployment.yaml
          sed -i "s|bagato220/ui:.*|bagato220/ui:${{ github.run_id }}|" ./kubernates/UI/Deployment.yaml
      - name: commit&push changes
        run: |
          git config --local user.email "abdallahbagato1999@gmail.com"
          git config --local user.name "abdallahbagato"
          git add .
          git commit -m "Update deployment files with new image tags"
          git push origin main